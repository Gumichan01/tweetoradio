 _______                _                      _ _       
|__   __|              | |                    | (_)      
   | |_      _____  ___| |_ ___  _ __ __ _  __| |_  ___  
   | \ \ /\ / / _ \/ _ \ __/ _ \| '__/ _` |/ _` | |/ _ \ 
   | |\ V  V /  __/  __/ || (_) | | | (_| | (_| | | (_) |
   |_| \_/\_/ \___|\___|\__\___/|_|  \__,_|\__,_|_|\___/ 
                                                         
                                                        

Les langages utilisés dans ce projet seront le C et le Java.

Sauf changement :
 Le diffuseur, ainsi que le gestionnaire, seront codés en C.
 L'utilisateur, en revanche, sera codé en Java.



Contraintes : 

 - Il faut respecter l'ensemble des spécifications indiquées dans le projet

 - Pour éviter un possible problème sur les machines de l'ufr, dans le cadre
	de l'utilisation du C, on adoptera le C ANSI strict (C89) comme norme.

 - Cela signifie donc qu'à la compilation on utilisera les options -pedantic -g

 - L'option '-pedantic' désigne l'utilisation du C89, l'option '-g' servira pour le débogage



Quelques consignes :


 - Peu importe la langue utilisée pour les noms de variables ou de fonction, 
	l'important c'est que les noms doivent être pertinents.

 - En revanche les commentaires ainsi que les messages de commit doivent être en français

 - Pour le débogage, EVITEZ de mettre des printf partout dans le code.
	C'est dégueulasse et en plus il faudra les supprimer à chaque commit.
	Par contre les printf pertinents qui serviront pour le mode verbeux
	lors de la soutenance sont autorisés.

 - Utilisez gdb (GNU Debugger) si vous voulez deboguer votre code proprement,
	et valgrind pour la détection des fuites mémoire.
	Si vous [ne savez pas/n'avez jamais] [utiliser/utilisé] gdb, j'ai un TP relatif
	au module "Génie Logiciel et environnement de dévelopement" que je suis qui sera utile.

 - On travaillera sur Git (Pas de dropbox ou de courriel ou je ne sais quoi !! On est des geeks :) !!)


Les étapes seront les suivants :

TODO - Développer le diffuseur (partie client TCP + multi-diffusion)
	- Créer une file et un tweet (DONE)
	- Créer un historique de messages (DONE)
	- Créer un analyseur syntaxique (parser) (DONE)
	- (DONE) Gérer la connexion TCP avec la gestion des requêtes client et 
	  (DONE) le stockage des messages à diffuser.
		- Connexion client TCP à faire. (DONE)
			- Enregistrement des messages (DONE)
			- (DONE) Liste des messages diffusées

	- Gérer la multi-diffusion des messages et leur stockage dans l'historique (DONE)
		- (DONE) Diffusion du message aux abonnés.
		- (DONE) Sauvegarde des messages envoyés dans l'historique.

DOING - Développer le gestionnaire
	- Demande d'enregistrement du diffuseur (TODO)
	- Interrogation du gestionnaire sur l'activité des diffuseurs (TODO)

TODO - Etablir la communication entre l'utilisateur et le gestionnaire
	- Demande de la liste des diffuseurs actifs (TODO)


Extensions possibles :

 - Partage de fichier 
 - Commande d'administration d'un diffuseur et/ou d'un gestionnaire
 - Extinction propre du système
 - Des suggestions ?
